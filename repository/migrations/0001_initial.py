# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-02-19 03:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cmdb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='分组名称')),
                ('yaml_path', models.CharField(blank=True, max_length=200, null=True, verbose_name='YAML配置文件路径')),
                ('group_type', models.SmallIntegerField(choices=[(0, 'private'), (1, 'public')], default=0)),
            ],
            options={
                'verbose_name_plural': '应用分组表',
            },
        ),
        migrations.CreateModel(
            name='AppInstances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('port', models.SmallIntegerField(blank=True, null=True, verbose_name='实例端口')),
                ('asset_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='资产编号(CMDB)')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='repository.AppGroups')),
            ],
            options={
                'verbose_name_plural': '应用实例表',
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('app_type', models.CharField(choices=[('java', 'java'), ('php', 'php'), ('python', 'python'), ('worker', 'worker'), ('static', 'static'), ('nodejs', 'nodejs')], default='java', max_length=10)),
                ('leader', models.CharField(blank=True, max_length=40, null=True, verbose_name='开发leader')),
                ('members', models.CharField(blank=True, max_length=40, null=True, verbose_name='开发成员')),
            ],
            options={
                'verbose_name_plural': '应用信息表',
            },
        ),
        migrations.CreateModel(
            name='DockerYamlConf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yaml_data', models.TextField()),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('group_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.AppGroups')),
            ],
            options={
                'verbose_name_plural': 'YAML配置表',
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('mission_type', models.SmallIntegerField(choices=[(1, 'Update'), (2, 'Restart'), (3, 'Rollback'), (4, 'Stop')], default=1)),
            ],
            options={
                'verbose_name_plural': '任务管理表',
            },
        ),
        migrations.CreateModel(
            name='MissionApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('status', models.SmallIntegerField(default=0, verbose_name='任务状态')),
            ],
            options={
                'verbose_name_plural': '任务-应用信息表',
            },
        ),
        migrations.CreateModel(
            name='MissionAppInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('status', models.SmallIntegerField(default=0, verbose_name='任务状态')),
            ],
            options={
                'verbose_name_plural': '任务-应用实例表',
            },
        ),
        migrations.CreateModel(
            name='MissionProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('app', models.ManyToManyField(related_name='mission_projects', to='repository.MissionApp')),
            ],
            options={
                'verbose_name_plural': '任务-项目信息表',
            },
        ),
        migrations.CreateModel(
            name='ProjectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.BusinessUnit', verbose_name='归属业务线')),
            ],
            options={
                'verbose_name_plural': '项目信息表',
            },
        ),
        migrations.CreateModel(
            name='UrlConfigHandler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=400, verbose_name='URL地址')),
                ('memo', models.CharField(blank=True, max_length=200, null=True)),
                ('cloud', models.ManyToManyField(related_name='urlconfighandler_cloud', to='cmdb.Asset')),
                ('docker', models.ManyToManyField(related_name='urlconfighandler_docker', to='cmdb.DockerInstance')),
                ('forward', models.ManyToManyField(related_name='urlconfighandler_forward', to='cmdb.Asset')),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='urlconfighandler', to='repository.AppGroups', verbose_name='所属分组')),
            ],
            options={
                'verbose_name_plural': 'URL关系映射表',
            },
        ),
        migrations.CreateModel(
            name='WebConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_type_id', models.IntegerField(choices=[(1, 'Nginx'), (2, 'Forward'), (3, 'HA')], default=1)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('business_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.BusinessUnit', verbose_name='归属业务线')),
            ],
            options={
                'verbose_name_plural': '转发服务配置表',
            },
        ),
        migrations.CreateModel(
            name='WebConfigInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('status', models.SmallIntegerField(default=0, verbose_name='任务状态')),
                ('msg', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name_plural': 'web配置管理ip状态表',
            },
        ),
        migrations.CreateModel(
            name='WebConfigLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(blank=True, max_length=200, null=True)),
                ('memo', models.CharField(blank=True, max_length=400, null=True)),
                ('user', models.CharField(blank=True, max_length=40, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('app_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webconfiglogs', to='repository.Applications', verbose_name='所属应用')),
            ],
            options={
                'verbose_name_plural': 'web配置管理日志表',
            },
        ),
        migrations.CreateModel(
            name='WebConfigLogsCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True, verbose_name='日志地址')),
                ('memo', models.CharField(blank=True, max_length=200, null=True)),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webconfiglogscenter', to='repository.AppGroups', verbose_name='所属分组')),
            ],
            options={
                'verbose_name_plural': '应用日志中心表',
            },
        ),
        migrations.AddField(
            model_name='webconfiginstance',
            name='mission_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webconfigip', to='repository.WebConfigLogs', verbose_name='所属任务'),
        ),
        migrations.AddField(
            model_name='missionapp',
            name='ip',
            field=models.ManyToManyField(related_name='mission_apps', to='repository.MissionAppInstance'),
        ),
        migrations.AddField(
            model_name='mission',
            name='project',
            field=models.ManyToManyField(related_name='missions', to='repository.MissionProject'),
        ),
        migrations.AddField(
            model_name='applications',
            name='project_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='repository.ProjectInfo'),
        ),
        migrations.AddField(
            model_name='appgroups',
            name='app_id',
            field=models.ManyToManyField(related_name='groups', to='repository.Applications'),
        ),
        migrations.AddField(
            model_name='appgroups',
            name='docker',
            field=models.ManyToManyField(related_name='dockers', to='cmdb.DockerInstance'),
        ),
        migrations.AddField(
            model_name='appgroups',
            name='instance',
            field=models.ManyToManyField(related_name='instances', to='cmdb.Asset'),
        ),
    ]
